- name: Install the prerequisites
  ansible.builtin.package:
    name:
      - curl
      - gnupg2
      - ca-certificates
      - lsb-release
      - ubuntu-keyring
    state: present


#  Import an official nginx signing key so apt could verify the packages authenticity. Fetch the key:
- name: Download nginx signing key
  ansible.builtin.get_url:
    url: "https://nginx.org/keys/nginx_signing.key"
    dest: "/tmp/nginx_signing.key"
    mode: '0644'

- name: Convert key to GPG format and store in keyring
  ansible.builtin.command:
    cmd: "gpg --dearmor -o /usr/share/keyrings/nginx-archive-keyring.gpg /tmp/nginx_signing.key"
  args:
    creates: "/usr/share/keyrings/nginx-archive-keyring.gpg"   


# To set up the apt repository for stable nginx packages, run the following command: 
- name: Set up the apt repository for stable nginx packages
  ansible.builtin.lineinfile:
    path: "/etc/apt/sources.list.d/nginx.list"
    line: "deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] http://nginx.org/packages/ubuntu {{ ansible_distribution_release }} nginx"
    create: yes
    mode: '0644'
  

#  Set up repository pinning to prefer our packages over distribution-provided ones:
- name: Ensure the APT preferences directory exists
  ansible.builtin.file:
    path: "/etc/apt/preferences.d"
    state: directory
    mode: '0755'

- name: Configure APT preferences for Nginx
  ansible.builtin.copy:
    dest: "/etc/apt/preferences.d/99nginx"
    content: |
      Package: *
      Pin: origin nginx.org
      Pin: release o=nginx
      Pin-Priority: 900
    mode: '0644'


# To install nginx, run the following commands:
- name: Update APT package cache
  ansible.builtin.apt:
    update_cache: yes

- name: Install Nginx
  ansible.builtin.apt:
    name: nginx
    state: present

- name: Ensure Nginx service is running
  service:
    name: nginx
    state: started
    enabled: yes
